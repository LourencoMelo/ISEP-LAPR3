@startuml

class ShipCaptain{

}

class User{
    -String id <<b>PK>
    -String password
    -UserRole role
}

class UserRole{
    -String id <<b>PK>
    -String description
}

class GetOccupancyRateCargoManifestUI{
    -GetOccupancyRateCargoManifestController getOccupancyRateCargoManifestController
    -Scanner in
    +run()
}

class GetOccupancyRateCargoManifestController{
    -Company company
    +GetOccupancyRateCargoManifestController(Company company)
    +GetOccupancyRateCargoManifestController()
    +getOccupancyRateCargoManifestController()
    +getCompany()

}

class Company {
    -TreeofShips treeOfShips
}

class TreeofShips{

}

class CargoManifest{
    HashMap<Container, int>
}

class Ship {

    -int MMSI <<b>PK>
    -String name
    -int IMO
    -int numberEnergyGenerator
    -int powerOutput
    -String callSign
    -int vesselType
    -double length
    -double width
    -int maximumCapacity
    -double draft
}

class Container {

    -String containerID <<b>PK>
    -int checkDigit
    -String ISO
    -int gross
    -int tare
    -int payload
    -int maxVolume
    -int repairRecommendation

}

ShipCaptain --> GetOccupancyRateCargoManifestUI : Access
GetOccupancyRateCargoManifestUI -right-> GetOccupancyRateCargoManifestController : Connects with
GetOccupancyRateCargoManifestController --> Company : Connects with
Company -left-> TreeofShips : has
TreeofShips --> Ship : has
CargoManifest --> Container : has
Ship -right-> CargoManifest : loads
Ship --> Container : has
ShipCaptain --> User : is a
User --> UserRole : has

@enduml